name: Release
on:
  release:
    types:
      - published
permissions:
  contents: read
  packages: write
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU for Multi-Platform Builds
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Get latest release tag
        run: |
          repo_user=$(echo ${{ github.repository }} | cut -d'/' -f1 | tr '[:upper:]' '[:lower:]')
          repo_name=$(echo ${{ github.repository }} | cut -d'/' -f2 | tr '[:upper:]' '[:lower:]')
          release_url="https://api.github.com/repos/$repo_user/$repo_name/releases/latest"

          release_tag=$(curl -sH "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "$release_url" | jq -r ".tag_name")

          echo "LATEST_RELEASE_TAG=$release_tag" >> $GITHUB_ENV
          echo "REPO_NAME=$repo_name" >> $GITHUB_ENV
          echo "REPO_USER=$repo_user" >> $GITHUB_ENV

          if [[ -z "$release_tag" ]]; then echo "‚ùå Error: Release tag is empty!" && exit 1; fi

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Multi-Platform Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64,linux/arm/v7,darwin/arm64
          tags: |
            ghcr.io/${{ env.REPO_USER }}/${{ env.REPO_NAME }}:${{ env.LATEST_RELEASE_TAG }}
            ghcr.io/${{ env.REPO_USER }}/${{ env.REPO_NAME }}:latest
